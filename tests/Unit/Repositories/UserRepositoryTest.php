<?php


namespace Tests\Unit\Repositories;


use App\Models\User;
use App\Repositories\User\UserEntity;
use App\Repositories\User\UserRepository;
use Illuminate\Contracts\Pagination\LengthAwarePaginator;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class UserRepositoryTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @var UserRepository
     */
    public $userRepository;

    /**
     * @var UserEntity
     */
    public $userEntity;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->refreshDatabase();

        $this->userRepository = new UserRepository(new User());
        $data = factory(User::class)->make()->toArray();

        $this->userEntity = new UserEntity($data);

        /*$self = $this;
        \Psy\Shell::debug(get_defined_vars());*/
    }

    public function testSuccessCreate()
    {
        $user = $this->userRepository->create($this->userEntity);

        $this->assertNotNull($user->uuid);
        $this->assertEquals($this->userEntity->getName(), $user->name);
    }

    public function testSuccessUpdate()
    {
        $user = $this->userRepository->create($this->userEntity);
        $this->userEntity->setUuid($user->uuid);

        $updatedUser = $this->userRepository->update($this->userEntity);

        $this->assertEquals($user->id, $updatedUser->id);
    }

    public function testSuccessDelete()
    {
        $user = $this->userRepository->create($this->userEntity);
        $deletedUser = $this->userRepository->delete($user->uuid);

        $this->assertTrue($deletedUser);
    }

    public function testSuccessFindByUuid()
    {
        $user = $this->userRepository->create($this->userEntity);
        $findUser = $this->userRepository->findByUuid($user->uuid);

        $this->assertEquals($user->id, $findUser->id);
    }

    public function testSuccessFindByPersonId()
    {
        $user = $this->userRepository->create($this->userEntity);
        $findUser = $this->userRepository->findByPersonId($user->person_id);

        $this->assertEquals($user->id, $findUser->id);
        $this->assertEquals($user->person_id, $findUser->person_id);
    }

    public function testSuccessFindAll()
    {
        factory(User::class, 10)->create();
        $allUsers = $this->userRepository->findAll(new UserEntity([]));

        $this->assertTrue($allUsers instanceof LengthAwarePaginator);
        $this->assertEquals(10, $allUsers->count());
    }
}
